      "SELECT test_id AS test_id,  project AS project,  type AS type,  log_time AS log_time,  connection_spec.data_direction AS data_direction,  connection_spec.server_ip AS server_ip,  connection_spec.server_af AS server_af,  connection_spec.server_hostname AS server_hostname,  connection_spec.server_kernel_version AS server_kernel_version,  connection_spec.client_ip AS client_ip,  connection_spec.client_af AS client_af,  connection_spec.client_hostname AS client_hostname,  connection_spec.client_application AS client_application,  connection_spec.client_browser AS client_browser,  connection_spec.client_os AS client_os,  connection_spec.client_kernel_version AS client_kernel_version,  connection_spec.client_version AS client_version,  connection_spec.client_geolocation.continent_code AS client_continent_code,  connection_spec.client_geolocation.country_code AS client_country_code,  connection_spec.client_geolocation.country_code3 AS client_country_code3,  connection_spec.client_geolocation.country_name AS client_country_name,  connection_spec.client_geolocation.region AS client_region,  connection_spec.client_geolocation.metro_code AS client_metro_code,  connection_spec.client_geolocation.city AS client_city,  connection_spec.client_geolocation.area_code AS client_area_code,  connection_spec.client_geolocation.postal_code AS client_postal_code,  connection_spec.client_geolocation.latitude AS client_latitude,  connection_spec.client_geolocation.longitude AS client_longitude,  connection_spec.server_geolocation.continent_code AS server_continent_code,  connection_spec.server_geolocation.country_code AS server_country_code,  connection_spec.server_geolocation.country_code3 AS server_country_code3,  connection_spec.server_geolocation.country_name AS server_country_name,  connection_spec.server_geolocation.region AS server_region,  connection_spec.server_geolocation.metro_code AS server_metro_code,  connection_spec.server_geolocation.city AS server_city,  connection_spec.server_geolocation.area_code AS server_area_code,  connection_spec.server_geolocation.postal_code AS server_postal_code,  connection_spec.server_geolocation.latitude AS server_latitude,  connection_spec.server_geolocation.longitude AS server_longitude,  web100_log_entry.version AS w100version,  web100_log_entry.log_time AS w100log_time,  web100_log_entry.is_last_entry AS w100is_last_entry,  web100_log_entry.group_name AS w100group_name,  web100_log_entry.connection_spec.local_ip AS w100local_ip,  web100_log_entry.connection_spec.local_af AS w100local_af,  web100_log_entry.connection_spec.local_port AS w100local_port,  web100_log_entry.connection_spec.remote_ip AS w100remote_ip,  web100_log_entry.connection_spec.remote_port AS w100remote_port,  paris_traceroute_hop.protocol AS ptr_protocol,  paris_traceroute_hop.src_ip AS ptr_src_ip,  paris_traceroute_hop.src_af AS ptr_src_af,  paris_traceroute_hop.src_hostname AS ptr_src_hostname,  paris_traceroute_hop.dest_ip AS ptr_dest_ip,  paris_traceroute_hop.dest_af AS ptr_dest_af,  paris_traceroute_hop.dest_hostname AS ptr_dest_hostname,  paris_traceroute_hop.rtt AS ptr_rtt,  web100_log_entry.snap.LocalAddress AS w100_LocalAddress,  web100_log_entry.snap.LocalAddressType AS w100_LocalAddressType,  web100_log_entry.snap.LocalPort AS w100_LocalPort,  web100_log_entry.snap.RemAddress AS w100_RemAddress,  web100_log_entry.snap.RemPort AS w100_RemPort,  web100_log_entry.snap.WAD_IFQ AS w100_WAD_IFQ,  web100_log_entry.snap.WAD_MaxBurst AS w100_WAD_MaxBurst,  web100_log_entry.snap.WAD_MaxSsthresh AS w100_WAD_MaxSsthresh,  web100_log_entry.snap.WAD_NoAI AS w100_WAD_NoAI,  web100_log_entry.snap.WAD_CwndAdjust AS w100_WAD_CwndAdjust,  web100_log_entry.snap.ActiveOpen AS w100_ActiveOpen,  web100_log_entry.snap.MSSSent AS w100_MSSSent,  web100_log_entry.snap.MSSRcvd AS w100_MSSRcvd,  web100_log_entry.snap.WinScaleSent AS w100_WinScaleSent,  web100_log_entry.snap.WinScaleRcvd AS w100_WinScaleRcvd,  web100_log_entry.snap.SACK AS w100_SACK,  web100_log_entry.snap.TimeStamps AS w100_TimeStamps,  web100_log_entry.snap.ECN AS w100_ECN,  web100_log_entry.snap.SndWindScale AS w100_SndWindScale,  web100_log_entry.snap.RcvWindScale AS w100_RcvWindScale,  web100_log_entry.snap.WillSendSACK AS w100_WillSendSACK,  web100_log_entry.snap.WillUseSACK AS w100_WillUseSACK,  web100_log_entry.snap.TimeStampSent AS w100_TimeStampSent,  web100_log_entry.snap.TimeStampRcvd AS w100_TimeStampRcvd,  web100_log_entry.snap.SegsOut AS w100_SegsOut,  web100_log_entry.snap.DataSegsOut AS w100_DataSegsOut,  web100_log_entry.snap.DataOctetsOut AS w100_DataOctetsOut,  web100_log_entry.snap.HCDataOctetsOut AS w100_HCDataOctetsOut,  web100_log_entry.snap.SegsRetrans AS w100_SegsRetrans,  web100_log_entry.snap.OctetsRetrans AS w100_OctetsRetrans,  web100_log_entry.snap.SegsIn AS w100_SegsIn,  web100_log_entry.snap.DataSegsIn AS w100_DataSegsIn,  web100_log_entry.snap.DataOctetsIn AS w100_DataOctetsIn,  web100_log_entry.snap.HCDataOctetsIn AS w100_HCDataOctetsIn,  web100_log_entry.snap.Duration AS w100_Duration,  web100_log_entry.snap.ElapsedSecs AS w100_ElapsedSecs,  web100_log_entry.snap.ElapsedMicroSecs AS w100_ElapsedMicroSecs,  web100_log_entry.snap.StartTimeStamp AS w100_StartTimeStamp,  web100_log_entry.snap.CurMSS AS w100_CurMSS,  web100_log_entry.snap.PipeSize AS w100_PipeSize,  web100_log_entry.snap.MaxPipeSize AS w100_MaxPipeSize,  web100_log_entry.snap.SampleRTT AS w100_SampleRTT,  web100_log_entry.snap.SmoothedRTT AS w100_SmoothedRTT,  web100_log_entry.snap.RTTVar AS w100_RTTVar,  web100_log_entry.snap.MaxRTT AS w100_MaxRTT,  web100_log_entry.snap.MinRTT AS w100_MinRTT,  web100_log_entry.snap.SumRTT AS w100_SumRTT,  web100_log_entry.snap.HCSumRTT AS w100_HCSumRTT,  web100_log_entry.snap.CountRTT AS w100_CountRTT,  web100_log_entry.snap.CurRTO AS w100_CurRTO,  web100_log_entry.snap.MaxRTO AS w100_MaxRTO,  web100_log_entry.snap.MinRTO AS w100_MinRTO,  web100_log_entry.snap.SoftErrors AS w100_SoftErrors,  web100_log_entry.snap.SoftErrorReason AS w100_SoftErrorReason,  web100_log_entry.snap.IpTtl AS w100_IpTtl,  web100_log_entry.snap.IpTosIn AS w100_IpTosIn,  web100_log_entry.snap.IpTosOut AS w100_IpTosOut,  web100_log_entry.snap.SndUna AS w100_SndUna,  web100_log_entry.snap.SndNxt AS w100_SndNxt,  web100_log_entry.snap.SndMax AS w100_SndMax,  web100_log_entry.snap.ThruOctetsAcked AS w100_ThruOctetsAcked,  web100_log_entry.snap.HCThruOctetsAcked AS w100_HCThruOctetsAcked,  web100_log_entry.snap.RcvNxt AS w100_RcvNxt,  web100_log_entry.snap.ThruOctetsReceived AS w100_ThruOctetsReceived,  web100_log_entry.snap.HCThruOctetsReceived AS w100_HCThruOctetsReceived,  web100_log_entry.snap.SndLimTransRwin AS w100_SndLimTransRwin,  web100_log_entry.snap.SndLimTransCwnd AS w100_SndLimTransCwnd,  web100_log_entry.snap.SndLimTransSnd AS w100_SndLimTransSnd,  web100_log_entry.snap.SndLimTimeRwin AS w100_SndLimTimeRwin,  web100_log_entry.snap.SndLimTimeCwnd AS w100_SndLimTimeCwnd,  web100_log_entry.snap.SndLimTimeSnd AS w100_SndLimTimeSnd,  web100_log_entry.snap.SndLimBytesRwin AS w100_SndLimBytesRwin,  web100_log_entry.snap.SndLimBytesCwnd AS w100_SndLimBytesCwnd,  web100_log_entry.snap.SndLimBytesSender AS w100_SndLimBytesSender,  web100_log_entry.snap.State AS w100_State,  web100_log_entry.snap.Nagle AS w100_Nagle,  web100_log_entry.snap.SlowStart AS w100_SlowStart,  web100_log_entry.snap.CongAvoid AS w100_CongAvoid,  web100_log_entry.snap.CongSignals AS w100_CongSignals,  web100_log_entry.snap.OtherReductions AS w100_OtherReductions,  web100_log_entry.snap.X_OtherReductionsCM AS w100_X_OtherReductionsCM,  web100_log_entry.snap.X_OtherReductionsCV AS w100_X_OtherReductionsCV,  web100_log_entry.snap.CongOverCount AS w100_CongOverCount,  web100_log_entry.snap.CurCwnd AS w100_CurCwnd,  web100_log_entry.snap.MaxSsCwnd AS w100_MaxSsCwnd,  web100_log_entry.snap.MaxCaCwnd AS w100_MaxCaCwnd,  web100_log_entry.snap.LimCwnd AS w100_LimCwnd,  web100_log_entry.snap.CurSsthresh AS w100_CurSsthresh,  web100_log_entry.snap.MaxSsthresh AS w100_MaxSsthresh,  web100_log_entry.snap.MinSsthresh AS w100_MinSsthresh,  web100_log_entry.snap.LimSsthresh AS w100_LimSsthresh,  web100_log_entry.snap.InRecovery AS w100_InRecovery,  web100_log_entry.snap.FastRetran AS w100_FastRetran,  web100_log_entry.snap.Timeouts AS w100_Timeouts,  web100_log_entry.snap.SubsequentTimeouts AS w100_SubsequentTimeouts,  web100_log_entry.snap.CurTimeoutCount AS w100_CurTimeoutCount,  web100_log_entry.snap.AbruptTimeouts AS w100_AbruptTimeouts,  web100_log_entry.snap.DupAcksIn AS w100_DupAcksIn,  web100_log_entry.snap.SACKsRcvd AS w100_SACKsRcvd,  web100_log_entry.snap.SACKBlocksRcvd AS w100_SACKBlocksRcvd,  web100_log_entry.snap.PreCongSumCwnd AS w100_PreCongSumCwnd,  web100_log_entry.snap.PreCongSumRTT AS w100_PreCongSumRTT,  web100_log_entry.snap.PostCongSumRTT AS w100_PostCongSumRTT,  web100_log_entry.snap.PostCongCountRTT AS w100_PostCongCountRTT,  web100_log_entry.snap.ECNsignals AS w100_ECNsignals,  web100_log_entry.snap.SendStall AS w100_SendStall,  web100_log_entry.snap.QuenchRcvd AS w100_QuenchRcvd,  web100_log_entry.snap.RetranThresh AS w100_RetranThresh,  web100_log_entry.snap.NonRecovDAEpisodes AS w100_NonRecovDAEpisodes,  web100_log_entry.snap.SumOctetsReordered AS w100_SumOctetsReordered,  web100_log_entry.snap.NonRecovDA AS w100_NonRecovDA,  web100_log_entry.snap.SpuriousFrDetected AS w100_SpuriousFrDetected,  web100_log_entry.snap.SpuriousRtoDetected AS w100_SpuriousRtoDetected,  web100_log_entry.snap.DSACKDups AS w100_DSACKDups,  web100_log_entry.snap.MaxMSS AS w100_MaxMSS,  web100_log_entry.snap.MinMSS AS w100_MinMSS,  web100_log_entry.snap.SndInitial AS w100_SndInitial,  web100_log_entry.snap.RecInitial AS w100_RecInitial,  web100_log_entry.snap.CurRetxQueue AS w100_CurRetxQueue,  web100_log_entry.snap.MaxRetxQueue AS w100_MaxRetxQueue,  web100_log_entry.snap.CurAppWQueue AS w100_CurAppWQueue,  web100_log_entry.snap.MaxAppWQueue AS w100_MaxAppWQueue,  web100_log_entry.snap.X_Sndbuf AS w100_X_Sndbuf,  web100_log_entry.snap.CurRwinSent AS w100_CurRwinSent,  web100_log_entry.snap.MaxRwinSent AS w100_MaxRwinSent,  web100_log_entry.snap.MinRwinSent AS w100_MinRwinSent,  web100_log_entry.snap.ZeroRwinSent AS w100_ZeroRwinSent,  web100_log_entry.snap.LimRwin AS w100_LimRwin,  web100_log_entry.snap.LimMSS AS w100_LimMSS,  web100_log_entry.snap.DupAckEpisodes AS w100_DupAckEpisodes,  web100_log_entry.snap.RcvRTT AS w100_RcvRTT,  web100_log_entry.snap.DupAcksOut AS w100_DupAcksOut,  web100_log_entry.snap.CERcvd AS w100_CERcvd,  web100_log_entry.snap.ECESent AS w100_ECESent,  web100_log_entry.snap.ECNNonceRcvd AS w100_ECNNonceRcvd,  web100_log_entry.snap.CurReasmQueue AS w100_CurReasmQueue,  web100_log_entry.snap.MaxReasmQueue AS w100_MaxReasmQueue,  web100_log_entry.snap.CurAppRQueue AS w100_CurAppRQueue,  web100_log_entry.snap.MaxAppRQueue AS w100_MaxAppRQueue,  web100_log_entry.snap.X_Rcvbuf AS w100_X_Rcvbuf,  web100_log_entry.snap.X_wnd_clamp AS w100_X_wnd_clamp,  web100_log_entry.snap.X_rcv_ssthresh AS w100_X_rcv_ssthresh,  web100_log_entry.snap.X_dbg1 AS w100_X_dbg1,  web100_log_entry.snap.X_dbg2 AS w100_X_dbg2,  web100_log_entry.snap.X_dbg3 AS w100_X_dbg3,  web100_log_entry.snap.X_dbg4 AS w100_X_dbg4,  web100_log_entry.snap.CurRwinRcvd AS w100_CurRwinRcvd,  web100_log_entry.snap.MaxRwinRcvd AS w100_MaxRwinRcvd,  web100_log_entry.snap.MinRwinRcvd AS w100_MinRwinRcvd,  web100_log_entry.snap.ZeroRwinRcvd AS w100_ZeroRwinRcvd, FROM [measurement-lab:m_lab.2014_03] WHERE connection_spec.client_geolocation.country_name='Brazil' AND IS_EXPLICITLY_DEFINED(connection_spec.client_geolocation.city) AND project=0 AND web100_log_entry.is_last_entry=1;",




DLOAD

 SELECT 
   web100_log_entry.connection_spec.remote_ip,
   web100_log_entry.connection_spec.local_ip,
   web100_log_entry.snap.HCThruOctetsAcked/
       (web100_log_entry.snap.SndLimTimeRwin + 
        web100_log_entry.snap.SndLimTimeCwnd + 
        web100_log_entry.snap.SndLimTimeSnd)
 FROM [table_name] WHERE 
   IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsAcked)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeRwin)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeCwnd)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeSnd)
   AND IS_EXPLICITLY_DEFINED(project)
   AND project = 0
   AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction)
   AND connection_spec.data_direction = 1
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry)
   AND web100_log_entry.is_last_entry = True
   AND web100_log_entry.snap.HCThruOctetsAcked >= 8192
   AND (web100_log_entry.snap.SndLimTimeRwin + 
        web100_log_entry.snap.SndLimTimeCwnd + 
        web100_log_entry.snap.SndLimTimeSnd) >= 9000000
   AND (web100_log_entry.snap.SndLimTimeRwin + 
        web100_log_entry.snap.SndLimTimeCwnd +  
        web100_log_entry.snap.SndLimTimeSnd) < 3600000000
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.CongSignals)
   AND web100_log_entry.snap.CongSignals > 0




UPLOAD
SELECT 
   web100_log_entry.connection_spec.remote_ip,
   web100_log_entry.connection_spec.local_ip,
   web100_log_entry.snap.HCThruOctetsReceived/web100_log_entry.snap.Duration
 FROM [table_name] WHERE
   IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsReceived)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.Duration)
   AND IS_EXPLICITLY_DEFINED(project)
   AND project = 0
   AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction)
   AND connection_spec.data_direction = 0
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry)
   AND web100_log_entry.is_last_entry = True
   AND web100_log_entry.snap.HCThruOctetsReceived >= 8192
   AND web100_log_entry.snap.Duration >= 9000000
   AND web100_log_entry.snap.Duration < 3600000000
   


Latency RTT

SELECT 
   web100_log_entry.connection_spec.remote_ip,
   web100_log_entry.connection_spec.local_ip,
   web100_log_entry.snap.MinRTT
 FROM [table_name] WHERE 
   IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsAcked)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeRwin)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeCwnd)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeSnd)
   AND IS_EXPLICITLY_DEFINED(project)
   AND project = 0
   AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction)
   AND connection_spec.data_direction = 1
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry)
   AND web100_log_entry.is_last_entry = True
   AND web100_log_entry.snap.HCThruOctetsAcked >= 8192
   AND (web100_log_entry.snap.SndLimTimeRwin + 
        web100_log_entry.snap.SndLimTimeCwnd + 
        web100_log_entry.snap.SndLimTimeSnd) >= 9000000
   AND (web100_log_entry.snap.SndLimTimeRwin + 
        web100_log_entry.snap.SndLimTimeCwnd +  
        web100_log_entry.snap.SndLimTimeSnd) < 3600000000
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.MinRTT)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.CountRTT)
   AND web100_log_entry.snap.CountRTT > 0
   


Number of tests is from dload



% of tests that reached congestion (in dload)
web100_log_entry.snap.CongSignals > 1


Packet retransmission

 SELECT 
   web100_log_entry.connection_spec.remote_ip,
   web100_log_entry.connection_spec.local_ip,
   web100_log_entry.snap.SegsRetrans/web100_log_entry.snap.DataSegsOut FROM [table_name] WHERE 
   IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsAcked)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeRwin)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeCwnd)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeSnd)
   AND IS_EXPLICITLY_DEFINED(project)
   AND project = 0
   AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction)
   AND connection_spec.data_direction = 1
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry)
   AND web100_log_entry.is_last_entry = True
   AND web100_log_entry.snap.HCThruOctetsAcked >= 8192
   AND (web100_log_entry.snap.SndLimTimeRwin + 
        web100_log_entry.snap.SndLimTimeCwnd + 
        web100_log_entry.snap.SndLimTimeSnd) >= 9000000
   AND (web100_log_entry.snap.SndLimTimeRwin + 
        web100_log_entry.snap.SndLimTimeCwnd +  
        web100_log_entry.snap.SndLimTimeSnd) < 3600000000
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SegsRetrans)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.DataSegsOut)
   AND web100_log_entry.snap.DataSegsOut > 0
 



Network limited

SELECT 
   web100_log_entry.connection_spec.remote_ip,
   web100_log_entry.connection_spec.local_ip,
   web100_log_entry.snap.SndLimTimeCwnd/
       (web100_log_entry.snap.SndLimTimeRwin + 
        web100_log_entry.snap.SndLimTimeCwnd + 
        web100_log_entry.snap.SndLimTimeSnd)
 FROM [table_name] WHERE 
   IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsAcked)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeRwin)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeCwnd)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeSnd)
   AND IS_EXPLICITLY_DEFINED(project)
   AND project = 0
   AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction)
   AND connection_spec.data_direction = 1
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry)
   AND web100_log_entry.is_last_entry = True
   AND web100_log_entry.snap.HCThruOctetsAcked >= 8192
   AND (web100_log_entry.snap.SndLimTimeRwin + 
        web100_log_entry.snap.SndLimTimeCwnd + 
        web100_log_entry.snap.SndLimTimeSnd) >= 9000000
   AND (web100_log_entry.snap.SndLimTimeRwin + 
        web100_log_entry.snap.SndLimTimeCwnd +  
        web100_log_entry.snap.SndLimTimeSnd) < 3600000000
 
 
 Receiver limited
 
 SELECT 
   web100_log_entry.connection_spec.remote_ip,
   web100_log_entry.connection_spec.local_ip,
   web100_log_entry.snap.SndLimTimeRwin/
       (web100_log_entry.snap.SndLimTimeRwin + 
        web100_log_entry.snap.SndLimTimeCwnd + 
        web100_log_entry.snap.SndLimTimeSnd)
 FROM [table_name] WHERE 
   IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsAcked)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeRwin)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeCwnd)
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeSnd)
   AND IS_EXPLICITLY_DEFINED(project)
   AND project = 0
   AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction)
   AND connection_spec.data_direction = 1
   AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry)
   AND web100_log_entry.is_last_entry = True
   AND web100_log_entry.snap.HCThruOctetsAcked >= 8192
   AND (web100_log_entry.snap.SndLimTimeRwin + 
        web100_log_entry.snap.SndLimTimeCwnd + 
        web100_log_entry.snap.SndLimTimeSnd) >= 9000000
   AND (web100_log_entry.snap.SndLimTimeRwin + 
        web100_log_entry.snap.SndLimTimeCwnd +  
        web100_log_entry.snap.SndLimTimeSnd) < 3600000000
        
        
        
        
        
        
        
        
        
'''
Results of NDT tests are indicated in BigQuery with
    project = 0
Results of client-to-server tests are indicated in BigQuery with
    connection_spec.data_direction = 0
Results of server-to-client tests are indicated in BigQuery with
    connection_spec.data_direction = 1
    
To estimate the performance of a user connection, NDT attempts to stress the connection, by creating congestion between the user’s machine and an M-Lab server. An NDT test can end in 3 possible states:
...
The test ends after the first congestion episode. In this case, the both peak values and averages in the test results are valid data points. This condition is expressed in BigQuery with:

    web100_log_entry.snap.CongSignals > 1

Test results extracted from the last line of every web100 log are indicated in BigQuery with
    web100_log_entry.is_last_entry = True

The duration of a server-to-client test is
    web100_log_entry.snap.SndLimTimeRwin + web100_log_entry.snap.SndLimTimeCwnd + web100_log_entry.snap.SndLimTimeSnd

The duration of a client-to-server test is
    web100_log_entry.snap.Duration

The data transferred during of a client-to-server test is
    web100_log_entry.snap.HCThruOctetsReceived

The data transferred during of a server-to-client test is
    web100_log_entry.snap.HCThruOctetsAcked


complete?
For client-to-server tests:
    web100_log_entry.snap.Duration >= 9000000
For server-to-client tests:
    web100_log_entry.snap.SndLimTimeRwin + web100_log_entry.snap.SndLimTimeCwnd + web100_log_entry.snap.SndLimT
We also exclude results from tests that lasted much longer than expected (e.g., 10 min), because this is likely a symptom of problems during the test run.
The test exchanged at least 6 packets.
For client-to-server tests:
    web100_log_entry.snap.HCThruOctetsReceived >= 8192
For server-to-client tests:
    web100_log_entry.snap.HCThruOctetsAcked >= 8192

The test concluded the 3-way-handshake and the connection was established (and possibly closed).
    web100_log_entry.snap.State == 1 || (web100_log_entry.snap.State >= 5  && web100_log_entry.snap.State <= 11)
    
Download throughput

"SELECT web100_log_entry.connection_spec.remote_ip, web100_log_entry.connection_spec.local_ip, web100_log_entry.snap.HCThruOctetsAcked/(web100_log_entry.snap.SndLimTimeRwin + web100_log_entry.snap.SndLimTimeCwnd + web100_log_entry.snap.SndLimTimeSnd) as dspeed, FROM [table_name] WHERE IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip) AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsAcked) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeRwin) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeCwnd) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeSnd) AND IS_EXPLICITLY_DEFINED(project) AND project = 0 AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction) AND connection_spec.data_direction = 1 AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry) AND web100_log_entry.is_last_entry = True AND web100_log_entry.snap.HCThruOctetsAcked >= 8192 AND (web100_log_entry.snap.SndLimTimeRwin + web100_log_entry.snap.SndLimTimeCwnd + web100_log_entry.snap.SndLimTimeSnd) >= 9000000 AND (web100_log_entry.snap.SndLimTimeRwin + web100_log_entry.snap.SndLimTimeCwnd + web100_log_entry.snap.SndLimTimeSnd) < 3600000000 AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.CongSignals)AND web100_log_entry.snap.CongSignals > 0 AND IS_EXPLICITLY_DEFINED(connection_spec.client_geolocation.city) AND connection_spec.client_geolocation.country_name='Brazil';"



Upload throughput

"SELECT
web100_log_entry.connection_spec.remote_ip,
web100_log_entry.connection_spec.local_ip,
web100_log_entry.snap.HCThruOctetsReceived/web100_log_entry.snap.Duration
FROM [table_name] WHERE
IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip)
AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip)
AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsReceived)
AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.Duration)
AND IS_EXPLICITLY_DEFINED(project)
AND project = 0
AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction)
AND connection_spec.data_direction = 0
AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry)
AND web100_log_entry.is_last_entry = True
AND web100_log_entry.snap.HCThruOctetsReceived >= 8192
AND web100_log_entry.snap.Duration >= 9000000
AND web100_log_entry.snap.Duration < 3600000000;"


Round Trip Time (RTT)

    snapshot.web100_log_entry.snap.MinRTT
    if snapshot.web100_log_entry.snap.CountRTT > 10:
        snapshot.web100_log_entry.snap.SumRTT/snapshot.web100_log_entry.snap.CountRTT




SELECT
web100_log_entry.connection_spec.remote_ip,
web100_log_entry.connection_spec.local_ip,
web100_log_entry.snap.MinRTT
FROM [table_name] WHERE
IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip)
AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip)
AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsAcked)
AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeRwin)
AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeCwnd)
AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeSnd)
AND IS_EXPLICITLY_DEFINED(project)
AND project = 0
AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction)
AND connection_spec.data_direction = 1
AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry)
AND web100_log_entry.is_last_entry = True
AND web100_log_entry.snap.HCThruOctetsAcked >= 8192
AND (web100_log_entry.snap.SndLimTimeRwin +
web100_log_entry.snap.SndLimTimeCwnd +
web100_log_entry.snap.SndLimTimeSnd) >= 9000000
AND (web100_log_entry.snap.SndLimTimeRwin +
web100_log_entry.snap.SndLimTimeCwnd +
web100_log_entry.snap.SndLimTimeSnd) < 3600000000
AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.MinRTT)
AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.CountRTT)
AND web100_log_entry.snap.CountRTT > 0

Number of tests
The number of tests counts all the server-to-client tests whose results meet the same criteria used to compute the download throughput. As a consequence, the number of tests is computed as the number of entries in the result of the BigQuery query in the Download throughput section.



'''



'SELECT ' +
'web100_log_entry.connection_spec.remote_ip, ' +
'web100_log_entry.connection_spec.local_ip, ' +
'web100_log_entry.snap.MinRTT ' +
'FROM [table_name] WHERE ' +
'IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip) ' +
'AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip) ' +
'AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsAcked) ' +
'AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeRwin) ' +
'AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeCwnd) ' +
'AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeSnd) ' +
'AND IS_EXPLICITLY_DEFINED(project) ' +
'AND project = 0 ' +
'AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction) ' +
'AND connection_spec.data_direction = 1 ' +
'AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry) ' +
'AND web100_log_entry.is_last_entry = True ' +
'AND web100_log_entry.snap.HCThruOctetsAcked >= 8192 ' +
'AND (web100_log_entry.snap.SndLimTimeRwin + ' +
'web100_log_entry.snap.SndLimTimeCwnd + ' +
'web100_log_entry.snap.SndLimTimeSnd) >= 9000000 ' +
'AND (web100_log_entry.snap.SndLimTimeRwin + ' +
'web100_log_entry.snap.SndLimTimeCwnd + ' +
'web100_log_entry.snap.SndLimTimeSnd) < 3600000000 ' +
'AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.MinRTT) ' +
'AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.CountRTT) ' +
'AND web100_log_entry.snap.CountRTT > 0 ' +


What follows is an old definition of the queries to be ran.

def DefQlist(onedate=1, onequery=1):

    brcond='AND IS_EXPLICITLY_DEFINED(connection_spec.client_geolocation.country_name) AND IS_EXPLICITLY_DEFINED(connection_spec.client_geolocation.region) AND IS_EXPLICITLY_DEFINED(connection_spec.client_geolocation.city) AND connection_spec.client_geolocation.country_name="Brazil"'
    geovar= ', connection_spec.client_geolocation.region AS region, connection_spec.client_geolocation.city AS city, connection_spec.client_geolocation.latitude AS lat, connection_spec.client_geolocation.longitude AS lon'
    basicvars= ', web100_log_entry.connection_spec.remote_ip AS ip_remote, web100_log_entry.connection_spec.local_ip AS ip_local, test_id AS test_id, STRFTIME_UTC_USEC(UTC_USEC_TO_DAY(web100_log_entry.log_time * 1000000), "%Y-%m-%d") AS day'

    condition=[
               'IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip) AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip)AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsAcked) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeRwin) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeCwnd) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeSnd) AND IS_EXPLICITLY_DEFINED(project) AND project = 0 AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction) AND connection_spec.data_direction = 1 AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry) AND web100_log_entry.is_last_entry = True AND web100_log_entry.snap.HCThruOctetsAcked >= 8192 AND (web100_log_entry.snap.SndLimTimeRwin + web100_log_entry.snap.SndLimTimeCwnd + web100_log_entry.snap.SndLimTimeSnd) >= 9000000 AND (web100_log_entry.snap.SndLimTimeRwin + web100_log_entry.snap.SndLimTimeCwnd + web100_log_entry.snap.SndLimTimeSnd) < 3600000000 AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.CongSignals) AND web100_log_entry.snap.CongSignals > 0 %s' % brcond,
               'IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip) AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsReceived) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.Duration) AND IS_EXPLICITLY_DEFINED(project) AND project = 0 AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction) AND connection_spec.data_direction = 0 AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry) AND web100_log_entry.is_last_entry = True AND web100_log_entry.snap.HCThruOctetsReceived >= 8192 AND web100_log_entry.snap.Duration >= 9000000 AND web100_log_entry.snap.Duration < 3600000000 %s' % brcond,
               'IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip) AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip)AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsAcked) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeRwin) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeCwnd) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeSnd) AND IS_EXPLICITLY_DEFINED(project) AND project = 0 AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction) AND connection_spec.data_direction = 1 AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry) AND web100_log_entry.is_last_entry = True AND web100_log_entry.snap.HCThruOctetsAcked >= 8192 AND (web100_log_entry.snap.SndLimTimeRwin + web100_log_entry.snap.SndLimTimeCwnd + web100_log_entry.snap.SndLimTimeSnd) >= 9000000 AND (web100_log_entry.snap.SndLimTimeRwin + web100_log_entry.snap.SndLimTimeCwnd + web100_log_entry.snap.SndLimTimeSnd) < 3600000000 AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.MinRTT) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.CountRTT) AND web100_log_entry.snap.CountRTT > 0 %s' % brcond,
               'IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip) AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsAcked) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeRwin) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeCwnd) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeSnd) AND IS_EXPLICITLY_DEFINED(project) AND project = 0 AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction) AND connection_spec.data_direction = 1 AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry) AND web100_log_entry.is_last_entry = True AND web100_log_entry.snap.HCThruOctetsAcked >= 8192 AND (web100_log_entry.snap.SndLimTimeRwin + web100_log_entry.snap.SndLimTimeCwnd + web100_log_entry.snap.SndLimTimeSnd) >= 9000000 AND (web100_log_entry.snap.SndLimTimeRwin + web100_log_entry.snap.SndLimTimeCwnd + web100_log_entry.snap.SndLimTimeSnd) < 3600000000 AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SumRTT) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.CountRTT) AND web100_log_entry.snap.CountRTT > 10 %s' % brcond,
               'IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.remote_ip) AND IS_EXPLICITLY_DEFINED(web100_log_entry.connection_spec.local_ip)AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.HCThruOctetsAcked) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeRwin) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeCwnd) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SndLimTimeSnd) AND IS_EXPLICITLY_DEFINED(project) AND project = 0 AND IS_EXPLICITLY_DEFINED(connection_spec.data_direction) AND connection_spec.data_direction = 1 AND IS_EXPLICITLY_DEFINED(web100_log_entry.is_last_entry) AND web100_log_entry.is_last_entry = True AND web100_log_entry.snap.HCThruOctetsAcked >= 8192 AND (web100_log_entry.snap.SndLimTimeRwin + web100_log_entry.snap.SndLimTimeCwnd + web100_log_entry.snap.SndLimTimeSnd) >= 9000000 AND (web100_log_entry.snap.SndLimTimeRwin + web100_log_entry.snap.SndLimTimeCwnd + web100_log_entry.snap.SndLimTimeSnd) < 3600000000 AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.SegsRetrans) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.DataSegsOut) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.CongSignals) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.DupAcksIn) AND IS_EXPLICITLY_DEFINED(web100_log_entry.snap.DataSegsIn) %s' % brcond,
               ]

    varselect=[
               '(web100_log_entry.snap.HCThruOctetsAcked/            (web100_log_entry.snap.SndLimTimeRwin +             web100_log_entry.snap.SndLimTimeCwnd +             web100_log_entry.snap.SndLimTimeSnd)) AS dspeed, (web100_log_entry.snap.SndLimTimeCwnd/            (web100_log_entry.snap.SndLimTimeRwin +             web100_log_entry.snap.SndLimTimeCwnd +             web100_log_entry.snap.SndLimTimeSnd)) AS netlimited, (web100_log_entry.snap.SndLimTimeRwin/            (web100_log_entry.snap.SndLimTimeRwin +             web100_log_entry.snap.SndLimTimeCwnd +             web100_log_entry.snap.SndLimTimeSnd)) AS rcvlimited %s %s ' % (geovar, basicvars),
               'web100_log_entry.snap.HCThruOctetsReceived/web100_log_entry.snap.Duration AS uspeed %s %s ' % (geovar, basicvars),
               'web100_log_entry.snap.MinRTT AS minrtt %s %s ' % (geovar, basicvars),
               '(web100_log_entry.snap.SumRTT/web100_log_entry.snap.CountRTT) AS avgrtt %s %s ' % (geovar, basicvars),
               'web100_log_entry.snap.SegsRetrans/web100_log_entry.snap.DataSegsOut AS pktretrans, web100_log_entry.snap.DataSegsOut/web100_log_entry.snap.CongSignals AS pktloss, web100_log_entry.snap.DupAcksIn/web100_log_entry.snap.DataSegsIn AS pktooo %s %s ' % (geovar, basicvars),
               ]

    if onedate:
        datelist=[]
        ano=2014
        i=4
        datelist.append('measurement-lab:m_lab.%i_%02i' %(ano, i))
    else:
        datelist=[]
        for ano in range(2009,2015):
            if ano==2009:
                for i in range(8,13):
                    datelist.append('measurement-lab:m_lab.%i_%02i' %(ano, i))
            elif ano==2014:
                for i in range(1,5):
                    datelist.append('measurement-lab:m_lab.%i_%02i' %(ano, i))
            else:
                for i in range(1,13):
                    datelist.append('measurement-lab:m_lab.%i_%02i' %(ano, i))

    qlist=[]
    if onequery:
        for date in datelist:
            qlist.append('SELECT %s FROM [%s] WHERE %s' % (varselect[0], date, condition[0]))
    else:
        for x, y in zip(varselect, condition):
            for date in datelist:
                qlist.append('SELECT %s FROM [%s] WHERE %s' % (x, date, y))

    return qlist

